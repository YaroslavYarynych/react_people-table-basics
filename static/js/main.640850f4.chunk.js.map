{"version":3,"sources":["App.tsx","components/Loader/homePage/HomePage.tsx","components/Loader/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/Loader/people/PersonLink.tsx","components/Loader/people/PeopleRow.tsx","components/Loader/people/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["App","isActiveClass","isActive","classNames","className","role","to","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleRow","cn","born","died","mother","motherName","father","fatherName","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","isError","setIsError","isMessageVisible","length","useEffect","fetchData","getPeopleFromServer","peopleFromServer","map","find","p","personSlug","useParams","Root","path","element","index","replace","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.640850f4.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport './App.scss';\nimport classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport const App = () => {\n  const isActiveClass = ({ isActive }: { isActive: boolean }) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink to=\"/\" className={isActiveClass}>\n              Home\n            </NavLink>\n\n            <NavLink\n              className={isActiveClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <Outlet />\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">Home Page</h1>\n    </main>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import cn from 'classnames';\nimport React from 'react';\nimport { Person } from '../../../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person,\n  slug: string | undefined,\n};\n\nexport const PeopleRow: React.FC<Props> = ({ person, slug }) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={cn({\n        'has-background-warning': slug === person.slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        <p>\n          {person.mother ? (\n            <PersonLink person={person.mother} />\n          )\n            : person.motherName || '-'}\n        </p>\n      </td>\n      <td>\n        <p>\n          {person.father ? (\n            <PersonLink person={person.father} />\n          )\n            : person.fatherName || '-'}\n        </p>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../../api';\nimport { Person } from '../../../types';\nimport { Loader } from '../Loader';\nimport { PeopleRow } from './PeopleRow';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState('');\n\n  const isMessageVisible = isError && people.length === 0 && !isLoading;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const getPeopleFromServer = await getPeople();\n\n        const peopleFromServer = getPeopleFromServer.map(person => {\n          const mother = getPeopleFromServer.find(p => p.name === person.motherName);\n          const father = getPeopleFromServer.find(p => p.name === person.fatherName);\n\n          return {\n            ...person,\n            mother,\n            father,\n          };\n        });\n\n        setPeople(peopleFromServer);\n      } catch {\n        setIsError('Something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const { personSlug } = useParams();\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"container\">\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                {isError}\n              </p>\n            )}\n            {isMessageVisible && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n\n            )}\n\n            {isLoading && <Loader />}\n\n            {people.length > 0 && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people.map(person => (\n                    <PeopleRow\n                      person={person}\n                      key={person.slug}\n                      slug={personSlug}\n                    />\n                  ))}\n\n                </tbody>\n              </table>\n            )}\n\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import {\n  Routes,\n  Route,\n  HashRouter as Router,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/Loader/homePage/HomePage';\nimport { NotFoundPage } from './components/Loader/NotFoundPage';\nimport { PeoplePage } from './components/Loader/people/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container).render(<Root />);\n"],"sourceRoot":""}